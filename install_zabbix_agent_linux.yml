---
- name: Instala e registra o Zabbix Agent no Ubuntu
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    zabbix_server_ip: "192.168.200.37"
    zabbix_api_url: "http://192.168.200.37/zabbix"
    zabbix_api_user: "Admin"
    zabbix_api_pass: '33Uy`Njjr/Mnn$.$/C1N'
    zabbix_host_group: "SERVIDORES ARKLOK"
    zabbix_template_name: "Linux by Zabbix agent"

  tasks:

    - name: Definir URL do pacote zabbix-release conforme versão
      set_fact:
        zabbix_release_url: >-
          {% set v = ansible_facts['distribution_version'] %}
          {% if v == '24.04' %}
            https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_6.0+ubuntu24.04_all.deb
          {% elif v == '22.04' %}
            https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_6.0+ubuntu22.04_all.deb
          {% elif v == '20.04' %}
            https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_6.0+ubuntu20.04_all.deb
          {% elif v == '18.04' %}
            https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_6.0+ubuntu18.04_all.deb
          {% else %}
            ''
          {% endif %}



    - name: Abortar se versão não suportada
      fail:
        msg: "Ubuntu {{ ansible_facts['distribution_version'] }} não é suportado."
      when: zabbix_release_url == ''

    - name: Baixar pacote zabbix-release
      get_url:
        url: "{{ zabbix_release_url }}"
        dest: /tmp/zabbix-release.deb
        mode: '0644'

    - name: Instalar pacote zabbix-release
      apt:
        deb: /tmp/zabbix-release.deb
        state: present

    - name: Atualizar cache APT
      apt:
        update_cache: yes

    - name: Instalar zabbix-agent
      apt:
        name: zabbix-agent
        state: present

    - name: Configurar Server
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^Server='
        line: "Server={{ zabbix_server_ip }}"
        state: present

    - name: Configurar ServerActive
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^ServerActive='
        line: "ServerActive={{ zabbix_server_ip }}"
        state: present

    - name: Configurar Hostname
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^Hostname='
        line: "Hostname={{ inventory_hostname }}"
        state: present

    - name: Iniciar e habilitar zabbix-agent
      systemd:
        name: zabbix-agent
        enabled: yes
        state: restarted

    - name: Gerar nome do host Zabbix baseado no IP
      set_fact:
        zabbix_hostname: >-
          {{
            (
              ('EQUINIX SP3 - ' if ansible_facts['default_ipv4']['address'].startswith('192.168') else
               'ALPHAVILLE - ' if ansible_facts['default_ipv4']['address'].startswith('10.10.4') else
               'ITAPEVI - ' if ansible_facts['default_ipv4']['address'].startswith('10.10.0') or ansible_facts['default_ipv4']['address'].startswith('172.18') else
               'DESCONHECIDO - ')
              + ansible_facts['hostname'] | upper
            ).strip()
          }}

    - name: Autenticar na API Zabbix e obter token
      uri:
        url: "{{ zabbix_api_url }}/api_jsonrpc.php"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body:
          jsonrpc: "2.0"
          method: "user.login"
          params:
            username: "{{ zabbix_api_user }}"
            password: "{{ zabbix_api_pass }}"
          id: 1
          auth: null
      register: zabbix_auth_response

    - name: Verificar erro de autenticação
      fail:
        msg: "Erro ao autenticar na API Zabbix: {{ zabbix_auth_response.json.error }}"
      when: zabbix_auth_response.json.result is not defined

    - name: Criar host via chamada direta à API Zabbix
      uri:
        url: "{{ zabbix_api_url }}/api_jsonrpc.php"
        method: POST
        body_format: json
        headers:
          Content-Type: "application/json"
        body:
          jsonrpc: "2.0"
          method: "host.create"
          params:
            host: "{{ zabbix_hostname }}"
            interfaces:
              - type: 1
                main: 1
                useip: 1
                ip: "{{ ansible_facts['default_ipv4']['address'] }}"
                dns: ""
                port: "10050"
            groups:
              - name: "{{ zabbix_host_group }}"
            templates:
              - name: "{{ zabbix_template_name }}"
          auth: "{{ zabbix_auth_response.json.result }}"
          id: 2
      register: zabbix_create_result

    - name: Mostrar resposta da criação do host
      debug:
        var: zabbix_create_result.json
