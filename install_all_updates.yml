---
- name: Configurar atualizações automáticas com PowerShell 7
  hosts: all
  gather_facts: no
  vars:
    task_name: "AtualizarComPS7"
    task_description: "Executa atualizações do Windows via PowerShell 7"
    ps7_download_url: "https://github.com/PowerShell/PowerShell/releases/download/v7.4.1/PowerShell-7.4.1-win-x64.msi"
    update_command: "Import-Module PSWindowsUpdate; Install-WindowsUpdate -MicrosoftUpdate -AcceptAll -Verbose -IgnoreReboot"
    temp_dir: "C:\\Temp"

  tasks:
    # Etapa 1: Preparar ambiente
    - name: Criar diretório temporário
      win_file:
        path: "{{ temp_dir }}"
        state: directory

    # Etapa 2: Instalar PowerShell 7 (abordagem alternativa)
    - name: Baixar PowerShell 7
      win_get_url:
        url: "{{ ps7_download_url }}"
        dest: "{{ temp_dir }}\\PowerShell-7.4.1-win-x64.msi"
      register: download_ps7
      retries: 3
      delay: 10
      until: download_ps7 is succeeded

    - name: Instalar PowerShell 7 (método alternativo)
      win_shell: |
        Start-Process -FilePath "msiexec.exe" -ArgumentList '/i "{{ temp_dir }}\\PowerShell-7.4.1-win-x64.msi" /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1' -Wait
      register: install_ps7
      ignore_errors: yes

    - name: Verificar instalação do PowerShell 7
      win_shell: pwsh -Command "exit 0"
      register: ps7_check
      ignore_errors: yes
      changed_when: false

    - name: Falha se o PowerShell 7 não estiver instalado
      fail:
        msg: "Falha na instalação do PowerShell 7. Verifique manualmente."
      when: ps7_check is failed

    # Etapa 3: Instalar módulo PSWindowsUpdate
    - name: Instalar módulo PSWindowsUpdate
      win_shell: |
        pwsh -Command "Install-Module -Name PSWindowsUpdate -Force -AllowClobber"
      register: install_module
      retries: 3
      delay: 10
      ignore_errors: yes

    # Etapa 4: Criar tarefa agendada
    - name: Criar script PowerShell para tarefa agendada
      win_copy:
      content: |
        $action = New-ScheduledTaskAction -Execute 'pwsh.exe' -Argument '-NoProfile -Command "Import-Module PSWindowsUpdate; Install-WindowsUpdate -MicrosoftUpdate -AcceptAll -Verbose -IgnoreReboot"'
        $trigger = New-ScheduledTaskTrigger -Once -At (Get-Date).AddMinutes(5)
        $settings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries -StartWhenAvailable
        Register-ScheduledTask -TaskName '{{ task_name }}' -Description '{{ task_description }}' -Action $action -Trigger $trigger -Settings $settings -RunLevel Highest -Force
      dest: "{{ temp_dir }}\\create_update_task.ps1"

    - name: Executar script de criação da tarefa
      win_shell: |
        pwsh -File "{{ temp_dir }}\\create_update_task.ps1"
      register: create_task

    # Etapa 5: Executar tarefa imediatamente
    - name: Executar tarefa agendada
      win_shell: |
        pwsh -Command "Start-ScheduledTask -TaskName '{{ task_name }}'"
      register: run_task

    # Etapa 6: Monitorar execução
    - name: Aguardar conclusão das atualizações
      win_shell: |
        pwsh -Command "
        $maxWait = 60
        $counter = 0
        do {
          $taskInfo = Get-ScheduledTaskInfo -TaskName '{{ task_name }}'
          if ($taskInfo.LastTaskResult -eq 0) { exit 0 }
          Start-Sleep -Seconds 30
          $counter++
        } while ($counter -lt $maxWait)
        exit 1
        "
      register: monitor_task
      ignore_errors: yes

    # Etapa 7: Verificar necessidade de reinício
    - name: Verificar se reinicialização é necessária
      win_shell: |
        pwsh -Command "[bool](Get-ChildItem 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\RebootRequired' -ErrorAction SilentlyContinue)"
      register: reboot_required
      changed_when: false

    - name: Reiniciar se necessário
      win_reboot:
        msg: "Reinicialização necessária após atualizações"
        connect_timeout: 600
      when: reboot_required.stdout == "True"

    - name: Relatório final
      debug:
        msg: |
          Processo concluído com:
          - PowerShell 7 instalado: {{ ps7_check is succeeded }}
          - Módulo PSWindowsUpdate: {{ install_module is succeeded }}
          - Tarefa agendada criada: {{ create_task is succeeded }}
          - Atualizações executadas: {{ monitor_task is succeeded }}
          - Reinicialização necessária: {{ reboot_required.stdout == "True" | ternary('Sim','Não') }}
