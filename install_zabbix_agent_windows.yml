---
- name: Instala e registra o Zabbix Agent 2 no Windows
  hosts: windows
  gather_facts: no

  vars:
    zabbix_server_ip: "192.168.200.37"
    zabbix_api_url: "http://192.168.200.37/zabbix"
    zabbix_api_user: "Admin"
    zabbix_api_pass: '33Uy`Njjr/Mnn$.$/C1N'
    zabbix_host_group: "SERVIDORES ARKLOK"
    zabbix_template_name: "Windows by Zabbix agent"
    zabbix_agent_version: "6.4.10"
    zabbix_major_version: "6.4"
    zabbix_install_path: 'C:\\temp'
    zabbix_conf_path: 'C:\\Program Files\\Zabbix Agent 2\\zabbix_agent2.conf'

  tasks:

    - name: Obter IP principal de forma segura e genérica
      win_command: powershell -Command "(Get-NetIPAddress -AddressFamily IPv4 | Where-Object { $_.IPAddress -notlike '169.*' -and $_.IPAddress -ne '127.0.0.1' } | Sort-Object InterfaceIndex | Select-Object -First 1 -ExpandProperty IPAddress)"
      register: ip_output

    - name: Definir IP e Hostname
      set_fact:
        ip_do_host: "{{ ip_output.stdout | trim }}"
        zabbix_hostname: "WINDOWS-{{ ip_output.stdout | replace('.', '-') }}"

    - name: Baixar instalador do Zabbix Agent 2
      win_get_url:
        url: "https://cdn.zabbix.com/zabbix/binaries/stable/{{ zabbix_major_version }}/{{ zabbix_agent_version }}/zabbix_agent2-{{ zabbix_agent_version }}-windows-amd64-openssl.msi"
        dest: "{{ zabbix_install_path | regex_replace('\\\\', '\\\\\\\\') }}\\\\zabbix_agent2.msi"

    - name: Instalar Zabbix Agent 2
      win_package:
        path: "{{ zabbix_install_path }}\\zabbix_agent2.msi"
        state: present
        arguments: "/quiet"

    - name: Comentar parâmetros antigos no conf
      win_lineinfile:
        path: "{{ zabbix_conf_path }}"
        regexp: '^{{ item }}='
        line: "# Removido por Ansible - {{ item }}"
        state: present
        backup: yes
      loop:
        - Server
        - ServerActive
        - Hostname

    - name: Configurar Server
      win_lineinfile:
        path: "{{ zabbix_conf_path }}"
        regexp: '^Server='
        line: "Server={{ zabbix_server_ip }}"
        backup: yes

    - name: Configurar ServerActive
      win_lineinfile:
        path: "{{ zabbix_conf_path }}"
        regexp: '^ServerActive='
        line: "ServerActive={{ zabbix_server_ip }}"
        backup: yes

    - name: Configurar Hostname
      win_lineinfile:
        path: "{{ zabbix_conf_path }}"
        regexp: '^Hostname='
        line: "Hostname={{ zabbix_hostname }}"
        backup: yes

    - name: Reiniciar Zabbix Agent 2
      win_service:
        name: "Zabbix Agent 2"
        state: restarted
        start_mode: auto

    - name: Autenticar na API Zabbix
    delegate_to: localhost
    run_once: true
        uri:
          url: "{{ zabbix_api_url }}/api_jsonrpc.php"
          method: POST
          body_format: json
          headers:
            Content-Type: "application/json"
          body:
            jsonrpc: "2.0"
            method: "user.login"
            params:
              username: "{{ zabbix_api_user }}"
              password: "{{ zabbix_api_pass }}"
            id: 1
            auth: null
        register: zabbix_auth_response

    - name: Verificar se host já existe
      delegate_to: localhost
      run_once: true
          uri:
            url: "{{ zabbix_api_url }}/api_jsonrpc.php"
            method: POST
            body_format: json
            headers:
              Content-Type: "application/json"
            body:
              jsonrpc: "2.0"
              method: "host.get"
              params:
                filter:
                  host: ["{{ zabbix_hostname }}"]
              auth: "{{ zabbix_auth_response.json.result }}"
              id: 2
          register: zabbix_host_check

    - name: Buscar o groupid
      delegate_to: localhost
      run_once: true
          uri:
            url: "{{ zabbix_api_url }}/api_jsonrpc.php"
            method: POST
            body_format: json
            headers:
              Content-Type: "application/json"
            body:
              jsonrpc: "2.0"
              method: "hostgroup.get"
              params:
                filter:
                  name: ["{{ zabbix_host_group }}"]
              auth: "{{ zabbix_auth_response.json.result }}"
              id: 3
          register: zabbix_group_response

    - name: Definir groupid
      set_fact:
        zabbix_groupid: "{{ zabbix_group_response.json.result[0].groupid | int }}"

    - name: Buscar o template
      delegate_to: localhost
      run_once: true
          uri:
            url: "{{ zabbix_api_url }}/api_jsonrpc.php"
            method: POST
            body_format: json
            headers:
              Content-Type: "application/json"
            body:
              jsonrpc: "2.0"
              method: "template.get"
              params:
                output: ["templateid", "name"]
                filter:
                  host: ["{{ zabbix_template_name }}"]
              auth: "{{ zabbix_auth_response.json.result }}"
              id: 4
          register: zabbix_template_response

    - name: Definir templateid
      set_fact:
        zabbix_templateid: "{{ zabbix_template_response.json.result[0].templateid | int }}"

    - name: Criar host no Zabbix se não existir
      delegate_to: localhost
      run_once: true
          uri:
            url: "{{ zabbix_api_url }}/api_jsonrpc.php"
            method: POST
            body_format: json
            headers:
              Content-Type: "application/json"
            body: >
              {
                "jsonrpc": "2.0",
                "method": "host.create",
                "params": {
                  "host": "{{ zabbix_hostname }}",
                  "interfaces": [
                    {
                      "type": 1,
                      "main": 1,
                      "useip": 1,
                      "ip": "{{ ip_do_host }}",
                      "dns": "",
                      "port": "10050"
                    }
                  ],
                  "groups": [
                    { "groupid": {{ zabbix_groupid }} }
                  ],
                  "templates": [
                    { "templateid": {{ zabbix_templateid }} }
                  ]
                },
                "auth": "{{ zabbix_auth_response.json.result }}",
                "id": 5
              }
          when: zabbix_host_check.json.result | length == 0
          register: zabbix_create_result

    - name: Mostrar resposta da criação
      delegate_to: localhost
      run_once: true
      debug:
            var: zabbix_create_result.json
          when: zabbix_host_check.json.result | length == 0
